# loads packages needed
# R pacakges contain useful functions to analyze data
# install a package before first using it for the first time
# to install a package, click the "package" tab in the lower right pane and click "install"
library(readr)
library(mosaic)
# lego.csv can be found under "resources" on Sakai.
# lego.csv must be saved in the same folder as this notebook!
lego <- read_csv("lego.csv") # read_csv is a pre-written function in the package "readr"
# lego.csv is read by R as "lego" and stored in the format of dataframe
# Shows the variables and first 6 cases (by default)
head(lego)
amazon_prices <- lego$Amazon_Price
# use dataframe$variable_name to extract one variable in the data
lego$Price
# setting na.rm=TRUE to remove observations with NA in the calculation of mean and median
mean(amazon_prices, na.rm=TRUE)
median(amazon_prices, na.rm=TRUE)
# making histograms and boxplots of each variable to learn the shape of distrbutions.
hist(amazon_prices)
boxplot(amazon_prices, horizontal = TRUE)
# use which() to extract interesting observations
which(lego$Amazon_Price == 699.95)
lego[826,]
# Assignment operators in R: = vs. <-
xbar = mean(lego$Amazon_Price, na.rm=TRUE)
m = median(lego$Amazon_Price, na.rm=TRUE)
residxbar = lego$Amazon_Price - xbar
residm = lego$Amazon_Price - m
# returns NA because we used lego$Amazon_Price to assign values in residxbar and residm
sum(residxbar^2, na.rm=TRUE)
# using subset() to remove NA Amazon_Prices
lego_rm_AP_na = subset(lego, is.na(Amazon_Price)==FALSE)
# Assignment operators in R: = vs. <-
# no problem now. why does residxbar lead to a smaller sum of squared errors?
# other useful functions to describe the data.
# extract observations from two themes using subset()
# "|" represents "or" and "&" represents "and"
# two-sample t test
# boxplot comparison of the two themes. any visible difference?
# export data with write.csv()
# no problem now. why does residxbar lead to a smaller sum of squared errors?
sum(residxbar^2)
sum(residm^2)
# no problem now. why does residxbar lead to a smaller sum of squared errors?
sum(residxbar^2, na.rm=TRUE)
sum(residm^2, na.rm=TRUE)
# other useful functions to describe the data.
mean(amazon_prices~Theme, data = lego_rm_AP_na)
# using subset() to remove NA Amazon_Prices
lego_rm_AP_na = subset(lego, is.na(Amazon_Price)==FALSE)
amazon_prices = subset(amazon_prices, is.na(amazon_prices)==FALSE)
# other useful functions to describe the data.
mean(amazon_prices~Theme, data = lego_rm_AP_na)
tally(~Theme, data = lego_rm_AP_na)
# other useful functions to describe the data.
mean(~Theme, data = lego_rm_AP_na)
amazon_prices
tally(~Theme, data = lego_rm_AP_na)
# other useful functions to describe the data.
mean(amazon_prices~Theme, data = lego_rm_AP_na)
tally(~Theme, data = lego_rm_AP_na)
sd(amazon_prices~Theme, data = lego_rm_AP_na)
amazon_prices~Theme
boxplot(amazon_prices~Theme, data = lego_rm_AP_na)
# extract observations from two themes using subset()
# "|" represents "or" and "&" represents "and"
lego_friends_marvel = subset(lego_rm_AP_na, Theme == "Marvel" | Theme == "Friends")
lego_friends_marvel
sd(amazon_prices$Theme, data = lego_rm_AP_na)
# two-sample t test
t.test(amazon_prices ~ Theme, lego_friends_marvel)
# two-sample t test
t.test(amazon_prices ~ Theme, data = lego_friends_marvel)
# two-sample t test
t.test(amazon_prices~Theme, data = lego_friends_marvel)
# two-sample t test
t.test(amazon_prices~Theme, data = lego_friends_marvel)
library(mosaicCore)
# two-sample t test
t.test(amazon_prices~Theme, data = lego_friends_marvel)
detach("package:mosaicCore", unload = TRUE)
# two-sample t test
t.test(~Theme, data = lego_friends_marvel)
# two-sample t test
HELPrct
# two-sample t test
t.test(amazon_prices ~ Theme, data = lego_friends_marvel)
# boxplot comparison of the two themes. any visible difference?
boxplot(~Theme, data = lego_friends_marvel)
# boxplot comparison of the two themes. any visible difference?
boxplot(lego_friends_marvel~Theme, data = lego_friends_marvel)
# boxplot comparison of the two themes. any visible difference?
boxplot(amazon_prices~Theme, data = lego_friends_marvel)
# two-sample t test
t.test(lego_friends_marvel$Amazon_Price ~ Theme, data = lego_friends_marvel)
# boxplot comparison of the two themes. any visible difference?
boxplot(lego_friends_marvel$Amazon_Price~Theme, data = lego_friends_marvel)
# boxplot comparison of the two themes. any visible difference?
boxplot(lego_friends_marvel$Amazon_Price~Theme, data = lego_friends_marvel, horizontal=TRUE)
# boxplot comparison of the two themes. any visible difference?
boxplot(lego_friends_marvel$Amazon_Price~Theme,
data = lego_friends_marvel,
horizontal=TRUE
)
# loads packages needed
# R pacakges contain useful functions to analyze data
# install a package before first using it for the first time
# to install a package, click the "package" tab in the lower right pane and click "install"
library(readr)
library(mosaic)
# lego.csv can be found under "resources" on Sakai.
# lego.csv must be saved in the same folder as this notebook!
lego <- read_csv("lego.csv") # read_csv is a pre-written function in the package "readr"
# lego.csv is read by R as "lego" and stored in the format of dataframe
# Shows the variables and first 6 cases (by default)
head(lego)
amazon_prices <- lego$Amazon_Price
# use dataframe$variable_name to extract one variable in the data
lego$Price
# setting na.rm=TRUE to remove observations with NA in the calculation of mean and median
mean(amazon_prices, na.rm=TRUE)
median(amazon_prices, na.rm=TRUE)
# making histograms and boxplots of each variable to learn the shape of distrbutions.
hist(amazon_prices)
boxplot(amazon_prices, horizontal = TRUE)
# use which() to extract interesting observations
which(lego$Amazon_Price == 699.95)
lego[826,]
# Assignment operators in R: = vs. <-
xbar = mean(lego$Amazon_Price, na.rm=TRUE)
m = median(lego$Amazon_Price, na.rm=TRUE)
residxbar = lego$Amazon_Price - xbar
residm = lego$Amazon_Price - m
# returns NA because we used lego$Amazon_Price to assign values in residxbar and residm
sum(residxbar^2, na.rm=TRUE)
# using subset() to remove NA Amazon_Prices
lego_rm_AP_na = subset(lego, is.na(Amazon_Price)==FALSE)
amazon_prices = subset(amazon_prices, is.na(amazon_prices)==FALSE)
# Assignment operators in R: = vs. <-
# no problem now. why does residxbar lead to a smaller sum of squared errors?
sum(residxbar^2, na.rm=TRUE)
sum(residm^2, na.rm=TRUE)
# other useful functions to describe the data.
mean(amazon_prices~Theme, data = lego_rm_AP_na)
tally(~Theme, data = lego_rm_AP_na)
sd(amazon_prices~Theme, data = lego_rm_AP_na)
boxplot(amazon_prices~Theme, data = lego_rm_AP_na)
# extract observations from two themes using subset()
# "|" represents "or" and "&" represents "and"
lego_friends_marvel = subset(lego_rm_AP_na, Theme == "Marvel" | Theme == "Friends")
lego_friends_marvel
amazon_prices = lego_friends_marvel$Amazon_Price
# two-sample t test
t.test(amazon_prices ~ Theme, data = lego_friends_marvel)
# boxplot comparison of the two themes. any visible difference?
boxplot(amazon_prices ~ Theme,
data = lego_friends_marvel,
horizontal = TRUE
)
# export data with write.csv()
# export data with write.csv()
write.csv(lego_friends_marvel,
file = "lego_friends_marvel",
col.names = FALSE)
# export data with write.csv()
write.csv(lego_friends_marvel,
file = "lego_friends_marvel",
row.names = FALSE)
# export data with write.csv()
write.csv(lego_friends_marvel,
file = "lego_friends_marvel.csv",
row.names = FALSE)
